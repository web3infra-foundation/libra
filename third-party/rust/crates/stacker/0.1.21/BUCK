# @generated by `cargo buckal`

load("@buckal//:cargo_manifest.bzl", "cargo_manifest")
load("@buckal//:wrapper.bzl", "buildscript_run", "rust_binary", "rust_library")

http_archive(
    name = "stacker-vendor",
    urls = ["https://static.crates.io/crates/stacker/stacker-0.1.21.crate"],
    sha256 = "cddb07e32ddb770749da91081d8d0ac3a16f1a569a18b20348cd371f5dead06b",
    type = "tar.gz",
    strip_prefix = "stacker-0.1.21",
    out = "vendor",
)

cargo_manifest(
    name = "stacker-manifest",
    vendor = ":stacker-vendor",
)

rust_library(
    name = "stacker",
    srcs = [":stacker-vendor"],
    crate = "stacker",
    crate_root = "vendor/src/lib.rs",
    edition = "2021",
    env = {
        "OUT_DIR": "$(location :stacker-build-script-run[out_dir])",
    },
    rustc_flags = [
        "@$(location :stacker-build-script-run[rustc_flags])",
        "@$(location :stacker-manifest[env_flags])",
    ],
    visibility = ["PUBLIC"],
    deps = [
        "//third-party/rust/crates/cfg-if/1.0.3:cfg-if",
        "//third-party/rust/crates/libc/0.2.175:libc",
        "//third-party/rust/crates/psm/0.1.26:psm",
    ],
)

rust_binary(
    name = "stacker-build-script-build",
    srcs = [":stacker-vendor"],
    crate = "build_script_build",
    crate_root = "vendor/build.rs",
    edition = "2021",
    rustc_flags = ["@$(location :stacker-manifest[env_flags])"],
    visibility = [],
    deps = ["//third-party/rust/crates/cc/1.2.38:cc"],
)

buildscript_run(
    name = "stacker-build-script-run",
    package_name = "stacker",
    buildscript_rule = ":stacker-build-script-build",
    env_srcs = [":stacker-manifest[env_dict]"],
    version = "0.1.21",
    manifest_dir = ":stacker-vendor",
    visibility = ["PUBLIC"],
)
