# @generated by `cargo buckal`

load("@buckal//:cargo_manifest.bzl", "cargo_manifest")
load("@buckal//:wrapper.bzl", "buildscript_run", "rust_binary", "rust_library")

http_archive(
    name = "portable-atomic-vendor",
    urls = ["https://static.crates.io/crates/portable-atomic/portable-atomic-1.11.1.crate"],
    sha256 = "f84267b20a16ea918e43c6a88433c2d54fa145c92a811b5b047ccbe153674483",
    type = "tar.gz",
    strip_prefix = "portable-atomic-1.11.1",
    out = "vendor",
)

cargo_manifest(
    name = "portable-atomic-manifest",
    vendor = ":portable-atomic-vendor",
)

rust_library(
    name = "portable-atomic",
    srcs = [":portable-atomic-vendor"],
    crate = "portable_atomic",
    crate_root = "vendor/src/lib.rs",
    edition = "2018",
    env = {
        "OUT_DIR": "$(location :portable-atomic-build-script-run[out_dir])",
    },
    features = [
        "default",
        "fallback",
    ],
    rustc_flags = [
        "@$(location :portable-atomic-build-script-run[rustc_flags])",
        "@$(location :portable-atomic-manifest[env_flags])",
    ],
    visibility = ["PUBLIC"],
)

rust_binary(
    name = "portable-atomic-build-script-build",
    srcs = [":portable-atomic-vendor"],
    crate = "build_script_build",
    crate_root = "vendor/build.rs",
    edition = "2018",
    features = [
        "default",
        "fallback",
    ],
    rustc_flags = ["@$(location :portable-atomic-manifest[env_flags])"],
    visibility = [],
)

buildscript_run(
    name = "portable-atomic-build-script-run",
    package_name = "portable-atomic",
    buildscript_rule = ":portable-atomic-build-script-build",
    env_srcs = [":portable-atomic-manifest[env_dict]"],
    features = [
        "default",
        "fallback",
    ],
    version = "1.11.1",
    manifest_dir = ":portable-atomic-vendor",
    visibility = ["PUBLIC"],
)
