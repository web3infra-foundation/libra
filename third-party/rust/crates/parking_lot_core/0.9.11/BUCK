# @generated by `cargo buckal`

load("@buckal//:cargo_manifest.bzl", "cargo_manifest")
load("@buckal//:wrapper.bzl", "buildscript_run", "rust_binary", "rust_library")

http_archive(
    name = "parking_lot_core-vendor",
    urls = ["https://static.crates.io/crates/parking_lot_core/parking_lot_core-0.9.11.crate"],
    sha256 = "bc838d2a56b5b1a6c25f55575dfc605fabb63bb2365f6c2353ef9159aa69e4a5",
    type = "tar.gz",
    strip_prefix = "parking_lot_core-0.9.11",
    out = "vendor",
)

cargo_manifest(
    name = "parking_lot_core-manifest",
    vendor = ":parking_lot_core-vendor",
)

rust_library(
    name = "parking_lot_core",
    srcs = [":parking_lot_core-vendor"],
    crate = "parking_lot_core",
    crate_root = "vendor/src/lib.rs",
    edition = "2021",
    env = {
        "OUT_DIR": "$(location :parking_lot_core-build-script-run[out_dir])",
    },
    rustc_flags = [
        "@$(location :parking_lot_core-build-script-run[rustc_flags])",
        "@$(location :parking_lot_core-manifest[env_flags])",
    ],
    visibility = ["PUBLIC"],
    deps = [
        "//third-party/rust/crates/cfg-if/1.0.3:cfg-if",
        "//third-party/rust/crates/libc/0.2.175:libc",
        "//third-party/rust/crates/smallvec/1.15.1:smallvec",
    ],
)

rust_binary(
    name = "parking_lot_core-build-script-build",
    srcs = [":parking_lot_core-vendor"],
    crate = "build_script_build",
    crate_root = "vendor/build.rs",
    edition = "2021",
    rustc_flags = ["@$(location :parking_lot_core-manifest[env_flags])"],
    visibility = [],
)

buildscript_run(
    name = "parking_lot_core-build-script-run",
    package_name = "parking_lot_core",
    buildscript_rule = ":parking_lot_core-build-script-build",
    env_srcs = [":parking_lot_core-manifest[env_dict]"],
    version = "0.9.11",
    manifest_dir = ":parking_lot_core-vendor",
    visibility = ["PUBLIC"],
)
